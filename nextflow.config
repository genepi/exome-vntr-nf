docker.enabled = true

manifest {
    name                                  = 'vntr-calling-nf'
    version                               = '0.4.9'
    description                           = 'Nextflow pipeline to resolve variants in VNTRS from sequencing data'
    author                                = 'Sebastian SchÃ¶nherr'
    homePage                              = 'https://github.com/genepi/vntr-calling-nf'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=21.04.0'
}

// Global default params, used in configs
params {

    //Required inputs
    project                        = null
    input                          = null
    gold                           = null
    region                         = null
    build                          = null
    region                         = null
    reference                      = null
    signature_split_value          = 50
    mutserve_detection_limit       = 0.01
    mutserve_baseQ                 = 30
    mutserve_mapQ                  = 20
    mutserve_alignQ                = 30
    contig                         = null
    //optional
    outdir                         = null

}

process.container                 = 'quay.io/genepi/vntr-calling-nf:v0.4.9'


// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug { process.beforeScript          = 'echo $HOSTNAME' }

    docker {
        docker.enabled                    = true
        docker.userEmulation              = true
        singularity.enabled               = false
    }

    singularity {
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false
    }

    development {
        process.container                 = 'genepi/vntr-calling-nf:latest'
        docker.enabled                    = true
        docker.userEmulation              = true
        resume                            = true
        singularity.enabled               = false
    }

    slurm {
        process.executor                  = 'slurm'
        errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
        maxErrors = '-1'
        maxRetries = 3
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false
    }

    slurm_with_scratch {
        process.executor                  = 'slurm'
        process.scratch                   = true
        errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
        maxErrors = '-1'
        maxRetries = 3
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false

    }

   test      {
        includeConfig 'conf/test.config'
   }

}
